<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">

<head>
	<meta charset="UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="viewport"
		content="width=device-width, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, user-scalable=no">
	<title>테마 수정</title>
	<link th:if="${userRole != null}" th:href="@{/css/inc/superHeader.css}" rel="stylesheet" type="text/css">
	<link th:if="${admin != null && userRole ==null}" th:href="@{/css/inc/adminHeader.css}" rel="stylesheet"
		type="text/css">
	<link th:if="${userRole != null}" th:href="@{/css/thema/themaUpdate.css}" rel="stylesheet" type="text/css">
	<link th:if="${admin != null}" th:href="@{/css/thema/themaUpdate2.css}" rel="stylesheet" type="text/css">
	<link th:href="@{/css/inc/footer.css}" rel="stylesheet" type="text/css">
	<script th:src="@{/js/inc/footer.js}"></script>
	<script>
		function fileDelete() {
			frm.action = "/thema/fileDelete/" + [[${themaId}]]
			frm.submit()

		}

		//포스터 이미지 유효성
		function validateImageFile(inputElement) {
			var allowedExtensions = ["jpg", "jpeg", "png", "gif"];
			var fileName = inputElement.value.toLowerCase();
			var fileExtension = fileName.split('.').pop();

			if (allowedExtensions.indexOf(fileExtension) === -1) {
				alert("이미지 파일 (jpg, jpeg, png, gif) 만 업로드 가능합니다.");
				inputElement.value = ''; // 파일 필드 초기화
			}
		}

		//타이틀 유효성
		function validateTitle(inputElement) {
			var titleValue = inputElement.value.trim(); // 앞뒤 공백을 제거한 값

			if (titleValue.length < 1) {
				alert("타이틀에 최소 1개 이상의 문자를 입력하세요.");
				inputElement.value = ''; // 입력 필드 초기화
			} else if (titleValue.length > 100) {
				alert("타이틀은 최대 100자까지 입력 가능합니다.");
				inputElement.value = titleValue.substring(0, 100); // 100자를 초과한 부분을 잘라내어 입력 필드에 설정
			}
		}

		//내용 유효성
		function validateContent(inputElement) {
			var contentValue = inputElement.value.trim(); // 앞뒤 공백을 제거한 값

			if (contentValue.length < 1) {
				alert("내용에 최소 1개 이상의 문자를 입력하세요.");
				inputElement.value = ''; // 입력 필드 초기화
			} else if (contentValue.length > 500) {
				alert("내용은 최대 500자까지 입력 가능합니다.");
				inputElement.value = contentValue.substring(0, 500); // 500자를 초과한 부분을 잘라내어 입력 필드에 설정
			}
		}
	</script>
</head>

<body>
	<header>
		<block th:if="${userRole!=null}">
			<div th:replace="~{inc/superHeader :: headerMenu}"></div>
		</block>
		<block th:unless="${userRole!=null}">
			<div th:replace="~{inc/adminHeader :: headerMenu}"></div>
		</block>
	</header>
	<div class="container">

		<form name="frm" th:action="@{/thema/update}" method="post" enctype="multipart/form-data" th:object="${thema}">
			<input type="hidden" th:field="*{rvPrice}" />
			<input type="hidden" th:field="*{themaId}" />
			<input type="hidden" th:field="*{branch}" />
			<table border="">
				<h2>테마 수정</h2>
				<tr>
					<td>지점ID</td>
					<td>
						<select name="branchId" id="branchId" disabled>
							<option value="">-- 선택하세요 --</option>
							<option th:each="br: ${branchList}" th:value="${br.branchId}" th:text="${br.name}"
								th:selected="${br.branchId == thema.branch.branchId }"></option>
						</select>
					</td>
				</tr>
				<block th:if="${userRole!=null}">
					<tr>
						<td>타이틀</td>
						<td><input type="text" th:field="*{title}" required="required" onblur="validateTitle(this)" /></td>
					</tr>
					<tr>
						<td>내용</td>
						<td><input type="text" th:field="*{content}" required="required" onblur="validateContent(this)" /></td>
					</tr>
					<tr>
						<td>포스터</td>
						<td>
							<th:block th:if="${thema.poster != null}">

								<input type="text" th:field="*{poster}" />

								<input type="button" onclick="fileDelete()" value="파일삭제" />

							</th:block>
							<input th:unless="${thema.poster != null}" type="file" th:field="*{mmff}" accept="image/*" onchange="validateImageFile(this)" />
						</td>
					</tr>
					<tr>
						<td>장르</td>
						<td><input type="text" th:field="*{type}" /></td>
					</tr>
					<tr>
						<td>가격</td>
						<td><input type="text" th:field="*{price}" required="required" /></td>
					</tr>
					<tr>
						<td>인원</td>
						<td><input type="text" th:field="*{people}" /></td>
					</tr>
					<tr>
						<td>난이도</td>
						<td><input type="text" th:field="*{level}" /></td>
					</tr>
					<tr>
						<td>이용시간</td>
						<td><input type="text" th:field="*{playTime}" /></td>
					</tr>
					<tr>
						<td>공포도</td>
						<td><input type="text" th:field="*{horror}" /></td>
					</tr>
					<tr>
						<td>활동성</td>
						<td><input type="text" th:field="*{activity}" /></td>
					</tr>
				</block>
				<!-- //===============관리자======================================//-->
				<block th:unless="${userRole!=null}">
					<tr>
						<td>Title</td>
						<td><input type="text" th:field="*{title}" required="required" readonly /></td>
					</tr>
					<tr>
						<td>Content</td>
						<td><input type="text" th:field="*{content}" readonly /></td>
					</tr>
					<tr>
						<td>Poster</td>
						<td>
							<th:block th:if="${thema.poster != null}">

								<input type="text" th:field="*{poster}" readonly />

								<input type="button" onclick="fileDelete()" value="파일삭제" />

							</th:block>
							<input th:unless="${thema.poster != null}" type="file" th:field="*{mmff}" readonly />
						</td>
					</tr>
					<tr>
						<td>Type</td>
						<td><input type="text" th:field="*{type}" readonly /></td>
					</tr>
					<tr>
						<td>Price</td>
						<td><input type="text" th:field="*{price}" required="required" readonly /></td>
					</tr>
					<tr>
						<td>People</td>
						<td><input type="text" th:field="*{people}" readonly /></td>
					</tr>
					<tr>
						<td>Level</td>
						<td><input type="text" th:field="*{level}" readonly /></td>
					</tr>
					<tr>
						<td>PlayTime</td>
						<td><input type="text" th:field="*{playTime}" readonly /></td>
					</tr>
					<tr>
						<td>Horror</td>
						<td><input type="text" th:field="*{horror}" readonly /></td>
					</tr>
					<tr>
						<td>Activity</td>
						<td><input type="text" th:field="*{activity}" readonly /></td>
					</tr>
				</block>


				<tr>
					<td>예약가능시간</td>
					<td>
						<div id="timeContainer">
							<input th:each="time: ${thema.timetable}" type="time" th:name="time" th:value="${time}"
								required="required" />
						</div>
						<button type="button" onclick="addTimeField()">추가</button>
						<button type="button" onclick="removeLastTimeField()">삭제</button>
					</td>
				</tr>
				<tr>
					<td colspan="2" align="right">
						<button type="submit">수정</button>
						<a th:href="@{/thema/themaList}"><button type="button">목록으로</button></a>
					</td>
				</tr>
			</table>
		</form>
	</div>
	<script th:inline="javascript">
		/* 시간 입력 필드 추가 함수 */
		function addTimeField() {
			var container = document.getElementById("timeContainer");
			var timeInputs = container.querySelectorAll('input[type="time"]');

			// 예약 가능 시간 갯수가 12개 미만인 경우에만 추가
			if (timeInputs.length < 12) {
				var newInput = document.createElement("input");
				newInput.type = "time";
				newInput.name = "time";
				newInput.step = 600;

				// 기본값 설정
				newInput.value = "22:00"; // 원하는 기본값으로 설정할 수 있습니다.

				// 중복 확인 및 자동 정렬
				var isDuplicate = false;
				for (var i = 0; i < timeInputs.length; i++) {
					if (timeInputs[i].value === newInput.value) {
						isDuplicate = true;
						alert("중복된 시간이 있습니다.");
						break;
					} else if (timeInputs[i].value > newInput.value) {
						// 새로 추가한 시간보다 큰 시간을 찾으면 그 앞에 추가
						container.insertBefore(newInput, timeInputs[i]);
						isDuplicate = true;
						break;
					}
				}

				// 중복이 아니고 가장 큰 시간인 경우에 뒤에 추가
				if (!isDuplicate) {
					container.appendChild(newInput);
				}
			}
		}

		/* 시간 입력 필드 삭제 함수 */
		function removeLastTimeField() {
			var container = document.getElementById("timeContainer");
			var timeInputs = container.querySelectorAll('input[type="time"]');
			if (timeInputs.length > 1) { // 최소 1개의 시간 입력 필드를 유지하기 위해 체크
				container.removeChild(timeInputs[timeInputs.length - 1]);
			}
		}
		
		
		/*시간 개수*/
		document.getElementById("themaForm").onsubmit = function () {
			var container = document.getElementById("timeContainer");
			var timeInputs = container.querySelectorAll('input[type="time"]');

			// 적어도 두 개의 시간 입력 필드가 있을 때만 폼을 제출하도록 합니다.
			if (timeInputs.length >= 1) {
				return true; // 폼 제출 허용
			} else {
				alert("적어도 한 개의 예약 가능한 시간을 추가하세요.");
				return false; // 폼 제출 차단
			}
		};

	</script>
	<footer>
		<div th:replace="~{inc/footer :: footer}"></div>
	</footer>
</body>

</html>